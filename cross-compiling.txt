******************************************************************************
***            Cross-compiling Avidemux on Linux for Windows               ***
***                                                                        ***
***          Description of the default build environment setup            ***
******************************************************************************


1. Install MXE (M cross environment) dependencies as described in

    http://mxe.cc/#requirements

for your respective Linux distribution then clone the git repository as
described in

    http://mxe.cc/#download

to a subdirectory of $HOME, e.g. to ~/adm:

    mkdir ~/adm && cd ~/adm && git clone https://github.com/mxe/mxe.git && cd mxe && export MX_ROOT_DIR=$(pwd)

##############################################################################

2. The stock version of x264 in MXE is currently more than two years old.
To update to the latest snapshot of the stable branch, run script
'x264-snapshot.sh' located in the 'mxe-patches' subfolder of the Avidemux top
source directory:

    ./x264-snapshot.sh && patch --dry-run -d "${MX_ROOT_DIR}" -p1 < x264.patch && patch -d "${MX_ROOT_DIR}" -p1 < x264.patch && cp -uv x264-*.tar.bz2 "${MX_ROOT_DIR}/pkg/"

x264 source is obtained from the git mirror at videolan.org.

##############################################################################

3. The stock version of x265 in MXE is 2.4. To update to 3.4, run script
'x265-get-source.sh' from the folder 'mxe-patches' in Avidemux top source
directory:

    ./x265-get-source && cp -uv x265_3.4.tar.gz "${MX_ROOT_DIR}/pkg/" && patch --dry-run -d "${MX_ROOT_DIR}" -p1 < x265.patch && patch -d "${MX_ROOT_DIR}" -p1 < x265.patch

x265 source is obtained from the mercurial mirror at videolan.org.

##############################################################################

4. Create ${MX_ROOT_DIR}/settings.mk with

MXE_TARGETS :=  i686-w64-mingw32.shared x86_64-w64-mingw32.shared

as content to build both 32 bit and 64 bit environments. Optionally, you can
set the variable MXE_TMP which determines where intermediate files are created
(e.g. to /tmp) by adding

MXE_TMP := /tmp

to the settings.mk file.

##############################################################################

5. Build required MXE packages for the targets specified above with

    cd "${MX_ROOT_DIR}" && MXE_SILENT_NO_NETWORK= make qttools qtwinextras sdl2 ogg vorbis lame a52dec faad2 fdk-aac libmad opus fribidi libass xvidcore x264 x265 libvpx

This pulls in all the dependencies and can take a couple of hours. The final
total size of the $MX_ROOT_DIR folder may be about 2.2G. Please note that twolame
is not available as a shared library.

The variable MXE_SILENT_NO_NETWORK is required to work around qtbase build
failure, see https://github.com/mxe/mxe/issues/2590 for details.

##############################################################################

6. To enable hardware-accelerated encoding provided by NVIDIA graphics cards of
the Kepler generation and later, clone the nv-codec-headers repository

    git clone https://github.com/FFmpeg/nv-codec-headers.git

change directory to the created nv-codec-headers subdirectory

    cd nv-codec-headers

delete the first line of the Makefile to remove a hardcoded PREFIX value

    sed -i 1d Makefile

and run

    PREFIX="${MX_ROOT_DIR}/usr/i686-w64-mingw32.shared" make install

for the 32 bit environment or

    PREFIX="${MX_ROOT_DIR}/usr/x86_64-w64-mingw32.shared" make install

for the 64 bit environment.

##############################################################################

7. In order to enable the AV1 decoder plugin in Avidemux, libaom, not provided
by MXE, needs to be installed. Run script 'install-libaom.bash' from the
'mxe-patches' subdirectory of Avidemux source tree with the path to the MXE
root directory passed as argument to automatically build and install version
2.0.1 of libaom in the 64 bit environment.

    ./install-libaom.bash "${MX_ROOT_DIR}"

The script will use the present working directory for all intermediate steps.

Build for the 32 bit environment has not been tested yet.

##############################################################################

8. Enter the Avidemux top source directory and run

    bash bootStrapCrossMingwQt5_mxe.sh --with-system-libass --with-system-liba52 --with-system-libmad

to cross-compile a 32 bit Avidemux version or

    bash bootStrapCrossMingwQt5_mxe.sh --64 --with-system-libass --with-system-liba52 --with-system-libmad

to cross-compile a 64 bit version. Run

    bash bootStrapCrossMingwQt5_mxe.sh -h

to see the list of all available options. It is assumed that 'zip' utility is
installed and in $PATH. Copy the 'avidemux_rYYMMDD-hhmmss_win{32,64}Qt5.zip'
file from the 'packaged_mingw_build_YYMMDD-hhmmss' directory to a Windows
partition, extract it on Windows and run 'avidemux.exe' from there.

##############################################################################

9. Issues:

As of this writing, twolame, aften, vapoursynth and avsproxy are not available.

2021-01-20
